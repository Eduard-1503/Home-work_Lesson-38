---
- hosts: All
  become: yes
  tasks:

  - name: Copy timezone
    ansible.builtin.copy:
      src: /usr/share/zoneinfo/Europe/Moscow
      dest: /etc/localtime
      owner: root

  - name: Restart chronyd
    ansible.builtin.systemd:
      name: chronyd
      state: restarted
      enabled: yes

  - name: Update the rpm
    ansible.builtin.dnf:
      name:
        - rpm
      state: latest
      update_only: yes

  - name: Enabled powertools
    ansible.builtin.shell:
      cmd: dnf config-manager --set-enabled powertools

  - name: Install epel-release
    ansible.builtin.dnf:
      name: epel-release
      state: present

  - name: Install borgbackup
    ansible.builtin.dnf:
      name: borgbackup
      state: present

  - name: Install expect
    ansible.builtin.dnf:
      name: expect
      state: present

  - name: Install mc
    ansible.builtin.dnf:
      name: mc
      state: present

- hosts: Client
  become: true
  tasks:

  - name: Create .ssh directory
    ansible.builtin.file:
      path=/root/.ssh
      owner=root
      group=root
      mode=0700
      state=directory

  - name: Generation ssh keys
    ansible.builtin.shell: |
      set timeout 300
      spawn ssh-keygen

      expect "Enter file in which to save the key (/root/.ssh/id_rsa): "
      send "\n"

      expect "Enter passphrase (empty for no passphrase): "
      send "\n"

      expect "Enter same passphrase again: "
      send "\n"

      expect "Enter same passphrase again: "
      send "\n"

      exit 0
    args:
      executable: /usr/bin/expect
    tags:
      - create_ssh_key

  - name: Copy id_rsa.pub in ./files/ to host machine
    ansible.builtin.fetch:
      src: /root/.ssh/id_rsa.pub
      dest: ./files/

- hosts: Server-backup
  become: true
  tasks:

  - name: Create a new ext4 partition
    community.general.parted:
      device: /dev/sdb
      number: 1
      state: present
      fs_type: ext4

  - name: Create folder backup
    ansible.builtin.shell:
      cmd: echo "/dev/sdb1 /var/backup ext4     defaults        0 0" >> /etc/fstab

  - name: Add the user borg
    ansible.builtin.user:
      name: borg
      comment: User for backup

  - name: Create folder backup                                              
    ansible.builtin.shell:
      cmd: mkdir /var/backup && mkfs.ext4 /dev/sdb1 && mount /dev/sdb1 /var/backup/ && chown borg:borg /var/backup/

  - name: Create .ssh directory
    ansible.builtin.file:
      path=/home/borg/.ssh
      owner=borg
      group=borg
      mode=0700
      state=directory

  - name: Copy authorized_keys
    ansible.builtin.copy:
      src: ./files/Client/root/.ssh/id_rsa.pub
      dest: /home/borg/.ssh/authorized_keys
      owner: borg
      mode: 0600

- hosts: Client
  become: true
  tasks:

  - name: Run expect to create backup repository
    ansible.builtin.shell: |
      set timeout 300
      spawn borg init --encryption=repokey borg@192.168.56.9:/var/backup/Client/

      expect "Are you sure you want to continue connecting (yes/no/\\\[fingerprint\\\])? "
      send "yes\n"

      expect "Enter new passphrase: "
      send "\n"

      expect "Enter same passphrase again: "
      send "\n"

      expect "Do you want your passphrase to be displayed for verification? \\\[yN\\\]: "
      send -- "y\n"

      expect "lace\\\(s\\\)."

      exit 0
    args:
      executable: /usr/bin/expect
    tags:
      - borg_create_repo

  - name: Create /root/scripts directory
    ansible.builtin.file:
      path=/root/scripts
      owner=root
      group=root
      mode=0700
      state=directory

  - name: Copy script borg-backup.sh
    ansible.builtin.copy:
      src: ./files/borg-backup.sh
      dest: /root/scripts/borg-backup.sh
      owner: root
      mode: 0700

  - name: Create job in cron for Borg backup
    ansible.builtin.cron:
      name: "Borg backup"
      minute: "*/5"
      hour: "*"
      day: "*"
      month: "*"
      weekday: "*"
      job: "/root/scripts/borg-backup.sh"

